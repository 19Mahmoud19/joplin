declare const shim: {
    isNode: () => boolean;
    isReactNative: () => boolean;
    isLinux: () => boolean;
    isFreeBSD: () => boolean;
    isWindows: () => boolean;
    isMac: () => boolean;
    platformName: () => string;
    mobilePlatform: () => string;
    isElectron: () => boolean;
    isPortable: () => boolean;
    fetchRequestCanBeRetried: (error: any) => boolean;
    fetchMaxRetry_: number;
    fetchMaxRetrySet: (v: number) => number;
    fetchWithRetry: (fetchFn: Function, options?: any) => Promise<any>;
    fetch: (_url: string, _options: any) => any;
    FormData: {
        new (form?: HTMLFormElement): FormData;
        prototype: FormData;
    };
    fsDriver: () => any;
    FileApiDriverLocal: any;
    readLocalFileBase64: (_path: string) => never;
    uploadBlob: () => never;
    sjclModule: any;
    randomBytes: (_count: number) => Promise<never>;
    stringByteLength: (_s: string) => never;
    detectAndSetLocale: Function;
    attachFileToNote: (_note: any, _filePath: string) => Promise<never>;
    attachFileToNoteBody: (_body: string, _filePath: string, _position: number, _options: any) => Promise<string>;
    imageFromDataUrl: (_imageDataUrl: string, _filePath: string) => Promise<never>;
    Buffer: any;
    openUrl: () => never;
    httpAgent: () => never;
    openOrCreateFile: (_path: string, _defaultContents: any) => never;
    waitForFrame: () => never;
    appVersion: () => never;
    injectedJs: (_name: string) => string;
    isTestingEnv: () => boolean;
    setIsTestingEnv: (v: boolean) => void;
    pathRelativeToCwd: (_path: string) => never;
    showMessageBox: (_message: string, _options?: any) => never;
    writeImageToFile: (_image: any, _format: any, _filePath: string) => never;
    setTimeout: (_fn: Function, _interval: number) => never;
    setInterval: (_fn: Function, _interval: number) => never;
    clearTimeout: (_id: any) => never;
    clearInterval: (_id: any) => never;
};
export default shim;
